class StudentGrades:
    def __init__(self):
        self.grades = {}

    def add_grade(self, subject, grade):
        # Add subject and grade to the grades dictionary
        self.grades[subject] = grade

    def calculate_average(self):
        # Calculate the average of all the grades
        if len(self.grades) == 0:
            return 0
        return sum(self.grades.values()) / len(self.grades)

    def get_letter_grade(self, average):
        # Assign letter grades based on the average score
        if average >= 90:
            return 'A'
        elif average >= 80:
            return 'B'
        elif average >= 70:
            return 'C'
        elif average >= 60:
            return 'D'
        else:
            return 'F'

    def get_gpa(self, average):
        # Convert average score to a GPA (on a 4.0 scale)
        if average >= 90:
            return 4.0
        elif average >= 80:
            return 3.0
        elif average >= 70:
            return 2.0
        elif average >= 60:
            return 1.0
        else:
            return 0.0

    def display_report(self):
        print("\nGrade Report:")
        print("-" * 20)
        for subject, grade in self.grades.items():
            print(f"{subject}: {grade}")

        average = self.calculate_average()
        letter_grade = self.get_letter_grade(average)
        gpa = self.get_gpa(average)

        print(f"\nAverage Grade: {average:.2f}")
        print(f"Letter Grade: {letter_grade}")
        print(f"GPA: {gpa:.2f}")


def main():
    student = StudentGrades()

    print("Student Grade Tracker")
    print("=====================")

    # Input grades for subjects
    while True:
        subject = input("Enter subject name (or type 'done' to finish): ")
        if subject.lower() == 'done':
            break
        try:
            grade = float(input(f"Enter grade for {subject}: "))
            if grade < 0 or grade > 100:
                print("Grade must be between 0 and 100. Try again.")
                continue
            student.add_grade(subject, grade)
        except ValueError:
            print("Invalid input. Please enter a numeric grade.")

    # Display the grade report
    student.display_report()


if __name__ == "__main__":
    main()
